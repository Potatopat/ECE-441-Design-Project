00001200 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 11/29/2017 1:32:25 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : 68000 Monitor Program
00000000                             3  * Written by : Daniel Hitchings
00000000                             4  * Date       : 5/2/13
00000000                             5  *-----------------------------------------------------------
00001000                             6      ORG    $1000
00001000  =00003000                  7  STACK       EQU $3000
00001000                             8  
00001000  =00002C60                  9  INPUT       EQU $2C60 
00001000                            10  
00001000  =00002C10                 11  COM_BUFF    EQU $2C10
00001000                            12  
00001000  =00002BC0                 13  OUT_BUFF    EQU $2BC0
00001000                            14  
00001000                            15  COM_TABL
00001000= 48 45 4C 50 20 00         16          DC.B 'HELP ',0
00001006= 4D 44 53 50 20 00         17          DC.B 'MDSP ',0
0000100C= 4D 54 53 54 20 00         18          DC.B 'MTST ',0
00001012= 53 57 41 50 20 00         19          DC.B 'SWAP ',0
00001018= 47 4F 20 00               20          DC.B 'GO ',0
0000101C= 53 52 20 00               21          DC.B 'SR ',0
00001020= 4D 43 48 47 20 00         22          DC.B 'MCHG ',0
00001026= 52 45 47 20 00            23          DC.B 'REG ',0
0000102B= 42 46 49 4C 4C 20 00      24          DC.B 'BFILL ',0
00001032= 42 4D 4F 56 20 00         25          DC.B 'BMOV ',0
00001038= 45 58 49 54 20 00         26  END_TBL DC.B 'EXIT ',0
0000103E                            27  
0000103E                            28  COM_ERR 
0000103E= 57 48 41 54 00            29          DC.B 'WHAT',0
00001043                            30          
00001043                            31  ARG_ERR_MSG
00001043= 41 52 47 55 4D 45 ...     32          DC.B 'ARGUMENTS WERE INCORRECT, CHECK HELP FOR FORMATTING',0
00001077                            33          
00001077                            34  REG_MSG
00001077= 44 30 3D 44 31 3D ...     35          DC.B 'D0=D1=D2=D3=D4=D5=D6=D7=A0=A1=A2=A3=A4=A5=A6=A7='
000010A7                            36          
000010A7= 4D 4F 4E 49 54 4F ...     37  PROMPT  DC.B 'MONITOR441> ',0
000010B4                            38          
000010B4                            39  COM_ADDR
000010B4= 000013CA                  40          DC.L HELP
000010B8= 000013DA                  41          DC.L MDSP
000010BC= 0000143A                  42          DC.L MTST
000010C0= 0000160A                  43          DC.L SWAP
000010C4= 00001498                  44          DC.L GO
000010C8= 00001540                  45          DC.L SR
000010CC= 000014AA                  46          DC.L MCHG
000010D0= 000014E8                  47          DC.L REG
000010D4= 00001590                  48          DC.L BFILL
000010D8= 000015D6                  49          DC.L BMOV
000010DC= 0000165A                  50          DC.L EXIT
00001200                            51      ORG $1200
00001200                            52  START
00001200  21FC 00003000 0000        53      MOVE.L #STACK, $0
00001208  21FC 00001660 0008        54      MOVE.L #BUS_ERR, $8     ;move exception handlers
00001210  21FC 00001670 000C        55      MOVE.L #ADDR_ERR, $C
00001218  21FC 00001680 0010        56      MOVE.L #ILL_INST, $10
00001220  21FC 00001690 0014        57      MOVE.L #DIV_ZERO, $14
00001228  21FC 000016A0 0020        58      MOVE.L #PRIV_VIOL, $20
00001230  21FC 000016B0 0024        59      MOVE.L #TRACE, $24
00001238  21FC 000016C0 0028        60      MOVE.L #LINE_A, $28
00001240  21FC 000016D0 002C        61      MOVE.L #LINE_F, $2C
00001248                            62  MAIN
00001248  43F8 10A7                 63      LEA PROMPT, A1
0000124C  103C 000E                 64      MOVE.B #14, D0
00001250  4E4F                      65      TRAP #15
00001252  43F8 2C60                 66      LEA INPUT, A1
00001256  103C 0002                 67      MOVE.B #2, D0
0000125A  4E4F                      68      TRAP #15
0000125C                            69      
0000125C                            70  PARSE_INPUT
0000125C  43F8 2C60                 71      LEA INPUT, A1
00001260  143C 0020                 72      MOVE.B #$20, D2
00001264                            73  CLR_SPC
00001264  B411                      74      CMP.B (A1), D2
00001266  5249                      75      ADD #$01, A1
00001268  67FA                      76      BEQ CLR_SPC
0000126A                            77      
0000126A  7200                      78      MOVEQ #0, D1
0000126C  5349                      79      SUB #$01, A1
0000126E                            80      
0000126E  45F8 2C10                 81      LEA COM_BUFF, A2
00001272                            82  INPUT_COPY
00001272  14D9                      83      MOVE.B (A1)+, (A2)+
00001274  5241                      84      ADDI #1, D1
00001276  0C41 0008                 85      CMPI #8, D1
0000127A  6C00 0084                 86      BGE ERR
0000127E  0C11 0020                 87      CMPI.B #$20, (A1)
00001282  6700 000C                 88      BEQ LOAD_COM
00001286  0C11 0000                 89      CMPI.B #$00, (A1)
0000128A  6700 0004                 90      BEQ LOAD_COM
0000128E  60E2                      91      BRA INPUT_COPY    
00001290                            92  
00001290                            93  LOAD_COM
00001290  14BC 0020                 94      MOVE.B #$20, (A2)
00001294  43F8 2C10                 95      LEA COM_BUFF, A1
00001298  45F8 1000                 96      LEA COM_TABL, A2
0000129C  47F8 10B4                 97      LEA COM_ADDR, A3
000012A0                            98      ;ADD #$01, A3
000012A0                            99      
000012A0                           100  FIND_COM
000012A0  B509                     101      CMPM.B (A1)+, (A2)+
000012A2  6600 0014                102      BNE NEXT_COM
000012A6  0C11 0020                103      CMPI.B #$20, (A1)
000012AA  66F4                     104      BNE FIND_COM
000012AC  0C12 0020                105      CMPI.B #$20, (A2)
000012B0  6600 004E                106      BNE ERR
000012B4                           107      
000012B4  2A53                     108      MOVE.L (A3), A5
000012B6  4ED5                     109      JMP (A5)
000012B8                           110      
000012B8                           111  NEXT_COM
000012B8  43F8 2C10                112      LEA     COM_BUFF, A1
000012BC                           113  FIND_NEXT
000012BC  0C1A 0000                114      CMPI.B  #$00, (A2)+
000012C0  66FA                     115      BNE     FIND_NEXT    
000012C2  584B                     116      ADD     #$04, A3
000012C4  B4FC 1038                117      CMPA    #END_TBL, A2
000012C8  6E00 0036                118      BGT     ERR
000012CC  4EF8 12A0                119      JMP     FIND_COM
000012D0                           120      
00001300                           121      ORG $1300
00001300                           122  ERR
00001300  43F8 103E                123      LEA     COM_ERR, A1
00001304  103C 000D                124      MOVE.B  #13, D0
00001308  4E4F                     125      TRAP #15
0000130A  4EF8 1248                126      JMP     MAIN
0000130E                           127  
0000130E                           128  ARG_ERR
0000130E  43F8 1043                129      LEA     ARG_ERR_MSG, A1
00001312  103C 000D                130      MOVE.B  #13, D0
00001316  4E4F                     131      TRAP #15
00001318  4EF8 1248                132      JMP     MAIN
0000131C                           133  
0000131C                           134  GET_ARG             ;TRIES TO GET ARGUMENT THAT A5 IS POINTING TO AND STORE IT IN D7
0000131C  0C15 0024                135      CMPI.B  #$24, (A5)
00001320  66EC                     136      BNE     ARG_ERR
00001322  7E00                     137      MOVEQ   #$00, D7
00001324  7C00                     138      MOVEQ   #$00, D6
00001326                           139  ADD_ARG
00001326  524D                     140      ADD     #$01, A5
00001328  E99F                     141      ROL.L   #4, D7
0000132A  DE86                     142      ADD.L   D6, D7
0000132C  1C1D                     143      MOVE.B  (A5)+, D6
0000132E  0C06 0039                144      CMPI.B  #$39, D6
00001332  6F00 0004                145      BLE     NUM
00001336  5F06                     146      SUBQ.B  #$07, D6
00001338                           147  NUM
00001338  0406 0030                148      SUB.B   #$30, D6
0000133C  0C25 0000                149      CMPI.B  #$00, -(A5)
00001340  6700 0014                150      BEQ     GOT_ARG
00001344  0C15 0020                151      CMPI.B  #$20, (A5)
00001348  6700 000C                152      BEQ     GOT_ARG
0000134C  0C15 003B                153      CMPI.B  #$3B, (A5)
00001350  6700 0004                154      BEQ     GOT_ARG
00001354  60D0                     155      BRA     ADD_ARG
00001356                           156  GOT_ARG
00001356  4E75                     157      RTS
00001358                           158      
00001358                           159  GET_VAL         ;GET THE VALUE THAT A5 IS POINTING TO AND PUT IT IN D7. D1 STORES THE LENGTH OF THE VALUE.
00001358  7E00                     160      MOVEQ   #$00, D7
0000135A  7C00                     161      MOVEQ   #$00, D6
0000135C                           162  ADD_VAL
0000135C  1C1D                     163      MOVE.B  (A5)+, D6
0000135E  0C06 0039                164      CMPI.B  #$39, D6
00001362  6F00 0004                165      BLE     NUM_VAL
00001366  5F06                     166      SUBQ.B  #$07, D6
00001368                           167  NUM_VAL
00001368  0406 0030                168      SUB.B   #$30, D6
0000136C  E99F                     169      ROL.L   #4, D7
0000136E  DE86                     170      ADD.L   D6, D7
00001370  5301                     171      SUB.B   #$01, D1
00001372  0C01 0000                172      CMPI.B  #$00, D1
00001376  6F00 0004                173      BLE     GOT_VAL
0000137A  60E0                     174      BRA     ADD_VAL
0000137C                           175  GOT_VAL
0000137C  4E75                     176      RTS
0000137E                           177      
0000137E                           178  DISP_ADDR       ;PRINT OUT THE VALUE OF A2 (USEFUL FOR MDSP AND MCHG)
0000137E  123C 0024                179      MOVE.B  #$24, D1
00001382  303C 0006                180      MOVE    #6, D0
00001386  4E4F                     181      TRAP    #15
00001388  200A                     182      MOVE.L  A2, D0
0000138A  43F8 2BC0                183      LEA     OUT_BUFF, A1
0000138E  343C 0008                184      MOVE.W  #8, D2
00001392                           185  DSP_ADR_LP
00001392  E998                     186      ROL.L   #4, D0
00001394  2600                     187      MOVE.L  D0, D3
00001396  C6BC 0000000F            188      AND.L   #$0F, D3
0000139C  0C03 0009                189      CMPI.B  #$09, D3
000013A0  6F00 0004                190      BLE     LESS_ADDR
000013A4  5E43                     191      ADD     #$07, D3
000013A6                           192  LESS_ADDR
000013A6  0643 0030                193      ADD     #$30, D3
000013AA  12C3                     194      MOVE.B  D3, (A1)+
000013AC  5342                     195      SUBQ.W  #1, D2
000013AE  66E2                     196      BNE     DSP_ADR_LP
000013B0                           197      
000013B0  12FC 0000                198      MOVE.B  #$00, (A1)+
000013B4  43F8 2BC0                199      LEA     OUT_BUFF, A1
000013B8  103C 000E                200      MOVE.B  #14, D0
000013BC  4E4F                     201      TRAP #15
000013BE  123C 003A                202      MOVE.B  #$3A, D1
000013C2  103C 0006                203      MOVE.B  #6, D0
000013C6  4E4F                     204      TRAP    #15
000013C8  4E75                     205      RTS
000013CA                           206       
000013CA                           207  HELP
000013CA  43F9 000017C1            208      LEA HELP_DISP, A1
000013D0  103C 000D                209      MOVE.B #13, D0
000013D4  4E4F                     210      TRAP #15
000013D6  4EF8 1248                211      JMP MAIN
000013DA                           212  
000013DA                           213  MDSP
000013DA  45F8 2BC0                214      LEA     OUT_BUFF, A2
000013DE  4BF8 2C60                215      LEA     INPUT, A5
000013E2  5A4D                     216      ADD     #$05, A5
000013E4  4EB8 131C                217      JSR     GET_ARG
000013E8  2447                     218      MOVE.L  D7, A2
000013EA  524D                     219      ADD     #$01, A5
000013EC  4EB8 131C                220      JSR     GET_ARG
000013F0  2647                     221      MOVE.L  D7, A3
000013F2  7200                     222      MOVEQ   #$00, D1
000013F4  43F8 2C60                223      LEA     INPUT, A1
000013F8                           224  NEW_LINE
000013F8  12BC 0000                225      MOVE.B  #$00, (A1)
000013FC  103C 000D                226      MOVE.B  #13, D0
00001400  4E4F                     227      TRAP    #15
00001402  4EB8 137E                228      JSR     DISP_ADDR
00001406  3C3C 0008                229      MOVE.W  #08, D6
0000140A                           230  DISP_MEM
0000140A  143C 0010                231      MOVE.B  #16, D2
0000140E  B6CA                     232      CMPA    A2, A3
00001410  6700 001A                233      BEQ     DONE_DISP
00001414  121A                     234      MOVE.B  (A2)+, D1
00001416  103C 000F                235      MOVE.B  #15, D0
0000141A  4E4F                     236      TRAP    #15
0000141C  123C 0020                237      MOVE.B  #$20, D1
00001420  103C 0006                238      MOVE.B  #6, D0
00001424  4E4F                     239      TRAP    #15
00001426  5346                     240      SUB     #01, D6
00001428  67CE                     241      BEQ     NEW_LINE
0000142A  60DE                     242      BRA     DISP_MEM
0000142C                           243  
0000142C                           244  DONE_DISP
0000142C  123C 0000                245      MOVE.B  #$00, D1
00001430  103C 0000                246      MOVE.B  #0, D0
00001434  4E4F                     247      TRAP    #15
00001436  4EF8 1248                248      JMP     MAIN
0000143A                           249  
0000143A                           250  MTST
0000143A  45F8 2BC0                251      LEA     OUT_BUFF, A2
0000143E  4BF8 2C60                252      LEA     INPUT, A5
00001442  5A4D                     253      ADD     #$05, A5
00001444  4EB8 131C                254      JSR     GET_ARG
00001448  2447                     255      MOVE.L  D7, A2
0000144A  524D                     256      ADD     #$01, A5
0000144C  4EB8 131C                257      JSR     GET_ARG
00001450  2647                     258      MOVE.L  D7, A3
00001452  2A4A                     259      MOVE.L  A2, A5      ;STORE COPY OF START LOCATION
00001454                           260  WRITE_TEST
00001454  B6CA                     261      CMPA    A2, A3
00001456  6D00 0008                262      BLT     DONE_WRITE
0000145A  34FC A5A5                263      MOVE.W  #$A5A5, (A2)+
0000145E  60F4                     264      BRA     WRITE_TEST
00001460                           265  DONE_WRITE
00001460  244D                     266      MOVE.L  A5, A2
00001462                           267  READ_TEST
00001462  0C52 A5A5                268      CMP.W   #$A5A5, (A2)
00001466  6600 0020                269      BNE     MEM_ERR
0000146A  34FC 5A5A                270      MOVE.W  #$5A5A, (A2)+
0000146E  B6CA                     271      CMPA    A2, A3
00001470  6EF0                     272      BGT     READ_TEST
00001472                           273      
00001472  244D                     274      MOVE.L  A5, A2
00001474                           275  FINAL_TEST
00001474  0C52 5A5A                276      CMP.W   #$5A5A, (A2)
00001478  6600 000E                277      BNE     MEM_ERR
0000147C  34FC 0000                278      MOVE.W  #$0000, (A2)+
00001480  B6CA                     279      CMPA    A2, A3
00001482  6EF0                     280      BGT     FINAL_TEST
00001484                           281      
00001484  4EF8 1248                282      JMP     MAIN
00001488                           283  
00001488                           284  MEM_ERR                 ;TODO: OUTPUT LOCATION OF ERROR (A2)
00001488  43F9 0000179F            285      LEA     MEM_ERR_MSG, A1
0000148E  103C 000D                286      MOVE.B  #13, D0
00001492  4E4F                     287      TRAP    #15
00001494  4EF8 1248                288      JMP     MAIN
00001498                           289  
00001498                           290  GO
00001498  4BF8 2C60                291      LEA     INPUT, A5
0000149C  564D                     292      ADD     #$03, A5
0000149E  4EB8 131C                293      JSR     GET_ARG
000014A2  43F8 2BC0                294      LEA     OUT_BUFF, A1
000014A6  2247                     295      MOVE.L  D7, A1
000014A8  4ED1                     296      JMP     (A1)
000014AA                           297      
000014AA                           298  MCHG
000014AA  4BF8 2C60                299      LEA     INPUT, A5
000014AE  5A4D                     300      ADD     #$05, A5
000014B0  4EB8 131C                301      JSR     GET_ARG
000014B4  2447                     302      MOVE.L  D7, A2
000014B6                           303  CHG_LOOP
000014B6  43F8 2BC0                304      LEA     OUT_BUFF, A1
000014BA  4EB8 137E                305      JSR     DISP_ADDR
000014BE  103C 0002                306      MOVE.B  #2, D0
000014C2  4E4F                     307      TRAP    #15
000014C4  43F8 2BC0                308      LEA     OUT_BUFF, A1
000014C8  0C11 002E                309      CMPI.B  #$2E, (A1)
000014CC  6700 0016                310      BEQ     DONE_CHG
000014D0  0C41 0004                311      CMPI.W  #4, D1
000014D4  6600 FE38                312      BNE     ARG_ERR
000014D8  4BF8 2BC0                313      LEA     OUT_BUFF, A5
000014DC  4EB8 1358                314      JSR     GET_VAL
000014E0  34C7                     315      MOVE.W  D7, (A2)+
000014E2  60D2                     316      BRA     CHG_LOOP
000014E4                           317  
000014E4                           318  DONE_CHG        
000014E4  4EF8 1248                319      JMP     MAIN
000014E8                           320  
000014E8                           321  REG
000014E8  4FF8 3000                322      LEA     STACK, A7
000014EC  48E7 FFFF                323      MOVEM.L D0-D7/A0-A7, -(A7)
000014F0  7A00                     324      MOVEQ   #00, D5
000014F2                           325  NXT_REG
000014F2  43F8 1077                326      LEA     REG_MSG, A1
000014F6  D2C5                     327      ADD     D5, A1
000014F8  5645                     328      ADD     #$03, D5
000014FA  323C 0003                329      MOVE.W  #03, D1
000014FE  103C 0001                330      MOVE.B  #01, D0
00001502  4E4F                     331      TRAP    #15
00001504  43F8 2BC0                332      LEA     OUT_BUFF, A1
00001508  343C 0008                333      MOVE.W  #8, D2
0000150C  201F                     334      MOVE.L  (A7)+, D0
0000150E                           335  NXT_DIG
0000150E  E998                     336      ROL.L   #4, D0
00001510  2600                     337      MOVE.L  D0, D3
00001512  C6BC 0000000F            338      AND.L   #$0F, D3
00001518  0C03 0009                339      CMPI.B  #$09, D3
0000151C  6F00 0004                340      BLE     LESS
00001520  5E43                     341      ADD     #$07, D3
00001522                           342  LESS
00001522  0643 0030                343      ADD     #$30, D3
00001526  12C3                     344      MOVE.B  D3, (A1)+
00001528  5342                     345      SUBQ.W  #1, D2
0000152A  66E2                     346      BNE     NXT_DIG
0000152C                           347      
0000152C  12FC 0000                348      MOVE.B  #$00, (A1)+
00001530  43F8 2BC0                349      LEA     OUT_BUFF, A1
00001534  103C 000D                350      MOVE.B  #13, D0
00001538  4E4F                     351      TRAP #15
0000153A                           352      
0000153A  BEFC 3000                353      CMPA    #STACK, A7
0000153E  6DB2                     354      BLT     NXT_REG   
00001540                           355      
00001540                           356  SR
00001540  4FF8 3000                357      LEA     STACK, A7
00001544  40E7                     358      MOVE    SR, -(A7)
00001546  43F9 0000158C            359      LEA     SR_MSG, A1
0000154C  103C 000E                360      MOVE.B  #14, D0
00001550  4E4F                     361      TRAP    #15
00001552  43F8 2BC0                362      LEA     OUT_BUFF, A1
00001556  343C 0004                363      MOVE.W  #4, D2
0000155A  201F                     364      MOVE.L  (A7)+, D0
0000155C                           365  NXT_SR
0000155C  E998                     366      ROL.L   #4, D0
0000155E  2600                     367      MOVE.L  D0, D3
00001560  C6BC 0000000F            368      AND.L   #$0F, D3
00001566  0C03 0009                369      CMPI.B  #$09, D3
0000156A  6F00 0004                370      BLE     LESS_SR
0000156E  5E43                     371      ADD     #$07, D3
00001570                           372  LESS_SR
00001570  0643 0030                373      ADD     #$30, D3
00001574  12C3                     374      MOVE.B  D3, (A1)+
00001576  5342                     375      SUBQ.W  #1, D2
00001578  66E2                     376      BNE     NXT_SR
0000157A                           377      
0000157A  12FC 0000                378      MOVE.B  #$00, (A1)+
0000157E  43F8 2BC0                379      LEA     OUT_BUFF, A1
00001582  103C 000D                380      MOVE.B  #13, D0
00001586  4E4F                     381      TRAP #15
00001588                           382      
00001588  4EF8 1248                383      JMP     MAIN
0000158C                           384  
0000158C                           385  SR_MSG
0000158C= 53 52 3D 00              386      DC.B    'SR=',0
00001590                           387  
00001590                           388  BFILL
00001590  4BF8 2C60                389      LEA     INPUT, A5
00001594  5C4D                     390      ADD     #$06, A5
00001596  4EB8 131C                391      JSR     GET_ARG
0000159A  2447                     392      MOVE.L  D7, A2
0000159C  524D                     393      ADD     #$01, A5
0000159E  4EB8 131C                394      JSR     GET_ARG
000015A2  2647                     395      MOVE.L  D7, A3
000015A4  7200                     396      MOVEQ   #00, D1
000015A6  2C4D                     397      MOVE.L  A5, A6
000015A8  524E                     398      ADD     #01, A6
000015AA                           399  GET_LENGTH
000015AA  5241                     400      ADD     #01, D1
000015AC  0C1E 0000                401      CMPI.B  #$00, (A6)+
000015B0  66F8                     402      BNE     GET_LENGTH
000015B2  0C01 0005                403      CMPI.B  #05, D1
000015B6  6600 FD56                404      BNE     ARG_ERR        
000015BA  4EB8 1358                405      JSR     GET_VAL    ;D7 NOW STORES THE WORD WE WANT TO FILL
000015BE                           406  FILL_MEM
000015BE  B4CB                     407      CMPA    A3, A2
000015C0  6C00 0006                408      BGE     DONE_FILL
000015C4  34C7                     409      MOVE.W  D7, (A2)+
000015C6  60F6                     410      BRA     FILL_MEM
000015C8                           411  
000015C8                           412  DONE_FILL
000015C8  123C 0000                413      MOVE.B  #$00, D1
000015CC  103C 0000                414      MOVE.B  #0, D0
000015D0  4E4F                     415      TRAP    #15
000015D2  4EF8 1248                416      JMP     MAIN
000015D6                           417  
000015D6                           418  BMOV
000015D6  4BF8 2C60                419      LEA     INPUT, A5
000015DA  5A4D                     420      ADD     #05, A5
000015DC  4EB8 131C                421      JSR     GET_ARG
000015E0  2447                     422      MOVE.L  D7, A2
000015E2  524D                     423      ADD     #01, A5
000015E4  4EB8 131C                424      JSR     GET_ARG
000015E8  2647                     425      MOVE.L  D7, A3
000015EA  524D                     426      ADD     #01, A5
000015EC  4EB8 131C                427      JSR     GET_ARG
000015F0  2847                     428      MOVE.L  D7, A4
000015F2                           429  MOVE_MEM
000015F2  B4CB                     430      CMPA    A3, A2
000015F4  6C00 0006                431      BGE     DONE_MOVE
000015F8  38DA                     432      MOVE.W  (A2)+, (A4)+
000015FA  60F6                     433      BRA     MOVE_MEM
000015FC                           434      
000015FC                           435  DONE_MOVE
000015FC  123C 0000                436      MOVE.B  #$00, D1
00001600  103C 0000                437      MOVE.B  #0, D0
00001604  4E4F                     438      TRAP    #15
00001606  4EF8 1248                439      JMP     MAIN
0000160A                           440      
0000160A                           441  SWAP
0000160A  4BF8 2C60                442      LEA     INPUT, A5
0000160E  5A4D                     443      ADD     #05, A5
00001610  4EB8 131C                444      JSR     GET_ARG
00001614  2447                     445      MOVE.L  D7, A2
00001616  524D                     446      ADD     #01, A5
00001618  4EB8 131C                447      JSR     GET_ARG
0000161C  2647                     448      MOVE.L  D7, A3
0000161E  524D                     449      ADD     #01, A5
00001620  0C15 0042                450      CMPI.B  #$42, (A5)
00001624  6700 0016                451      BEQ     SWAPB
00001628  0C15 0057                452      CMPI.B  #$57, (A5)
0000162C  6700 0018                453      BEQ     SWAPW
00001630  0C15 004C                454      CMPI.B  #$4C, (A5)
00001634  6700 001A                455      BEQ     SWAPL
00001638  4EF8 130E                456      JMP     ARG_ERR
0000163C                           457      
0000163C                           458  SWAPB
0000163C  1212                     459      MOVE.B  (A2), D1
0000163E  1493                     460      MOVE.B  (A3), (A2)
00001640  1681                     461      MOVE.B  D1, (A3)
00001642  4EF8 1248                462      JMP     MAIN
00001646                           463  SWAPW
00001646  3212                     464      MOVE.W  (A2), D1
00001648  3493                     465      MOVE.W  (A3), (A2)
0000164A  3681                     466      MOVE.W  D1, (A3)
0000164C  4EF8 1248                467      JMP     MAIN
00001650                           468  SWAPL
00001650  2212                     469      MOVE.L  (A2), D1
00001652  2493                     470      MOVE.L  (A3), (A2)
00001654  2681                     471      MOVE.L  D1, (A3)
00001656  4EF8 1248                472      JMP     MAIN
0000165A                           473  
0000165A                           474  EXIT
0000165A  103C 0009                475      MOVE.B #9, D0
0000165E  4E4F                     476      TRAP #15             ; halt simulator
00001660                           477  
00001660                           478  BUS_ERR
00001660  43F9 000016E0            479      LEA     BUS_ERR_MSG, A1
00001666  103C 000D                480      MOVE.B  #13, D0
0000166A  4E4F                     481      TRAP #15
0000166C                           482      
0000166C  4EF8 14E8                483      JMP     REG
00001670                           484  
00001670                           485  ADDR_ERR
00001670  43F9 000016FB            486      LEA     ADDR_ERR_MSG, A1
00001676  103C 000D                487      MOVE.B  #13, D0
0000167A  4E4F                     488      TRAP #15
0000167C                           489      
0000167C  4EF8 14E8                490      JMP     REG
00001680                           491  
00001680                           492  ILL_INST
00001680  43F9 0000171B            493      LEA     ILL_INST_MSG, A1
00001686  103C 000D                494      MOVE.B  #13, D0
0000168A  4E4F                     495      TRAP #15
0000168C                           496      
0000168C  4EF8 14E8                497      JMP     REG
00001690                           498  
00001690                           499  DIV_ZERO
00001690  43F9 0000173D            500      LEA     DIV0_ERR_MSG, A1
00001696  103C 000D                501      MOVE.B  #13, D0
0000169A  4E4F                     502      TRAP #15
0000169C                           503      
0000169C  4EF8 14E8                504      JMP     REG
000016A0                           505  
000016A0                           506  PRIV_VIOL
000016A0  43F9 00001759            507      LEA     PRIV_VIOL_MSG, A1
000016A6  103C 000D                508      MOVE.B  #13, D0
000016AA  4E4F                     509      TRAP #15
000016AC                           510      
000016AC  4EF8 14E8                511      JMP     REG
000016B0                           512  
000016B0                           513  TRACE
000016B0  43F9 0000176D            514      LEA     TRACE_MSG, A1
000016B6  103C 000D                515      MOVE.B  #13, D0
000016BA  4E4F                     516      TRAP #15
000016BC                           517      
000016BC  4EF8 14E8                518      JMP     REG
000016C0                           519  
000016C0                           520  LINE_A
000016C0  43F9 0000177D            521      LEA     LINE_A_MSG, A1
000016C6  103C 000D                522      MOVE.B  #13, D0
000016CA  4E4F                     523      TRAP #15
000016CC                           524      
000016CC  4EF8 14E8                525      JMP     REG
000016D0                           526  
000016D0                           527  LINE_F
000016D0  43F9 0000178E            528      LEA     LINE_F_MSG, A1
000016D6  103C 000D                529      MOVE.B  #13, D0
000016DA  4E4F                     530      TRAP #15
000016DC                           531      
000016DC  4EF8 14E8                532      JMP     REG
000016E0                           533  
000016E0                           534  
000016E0                           535  BUS_ERR_MSG
000016E0= 41 20 42 55 53 20 ...    536      DC.B    'A BUS ERROR HAS OCCURRED',$0A,$0D,0
000016FB                           537  ADDR_ERR_MSG
000016FB= 41 4E 20 41 44 44 ...    538      DC.B    'AN ADDRESS ERROR HAS OCCURRED',$0A,$0D,0    
0000171B                           539  ILL_INST_MSG
0000171B= 54 48 41 54 20 49 ...    540      DC.B    'THAT IS NOT A VALID INSTRUCTION',$0A,$0D,0
0000173D                           541  DIV0_ERR_MSG
0000173D= 59 4F 55 20 43 41 ...    542      DC.B    'YOU CANNOT DIVIDE BY ZERO',$0A,$0D,0
00001759                           543  PRIV_VIOL_MSG
00001759= 50 52 49 56 49 4C ...    544      DC.B    'PRIVILEGE VIOLATION',0
0000176D                           545  TRACE_MSG
0000176D= 54 52 41 43 45 20 ...    546      DC.B    'TRACE EXCEPTION',0
0000177D                           547  LINE_A_MSG
0000177D= 4C 49 4E 45 20 41 ...    548      DC.B    'LINE A EXCEPTION',0
0000178E                           549  LINE_F_MSG
0000178E= 4C 49 4E 45 20 46 ...    550      DC.B    'LINE F EXCEPTION',0
0000179F                           551      
0000179F                           552  MEM_ERR_MSG
0000179F= 54 48 45 52 45 20 ...    553      DC.B    'THERE WAS AN ERROR IN MEMORY AT: ',0
000017C1                           554      
000017C1                           555  HELP_DISP
000017C1= 48 45 4C 50 3A 20 ...    556      DC.B    'HELP: DISPLAYS THIS HELP MESSAGE.',$0A,$0D,$0A,$0D
000017E6= 4D 44 53 50 3A 20 ...    557      DC.B    'MDSP: OUTPUTS ADDRESS AND MEMORY CONTENTS.',$0A,$0D
00001812= 4D 44 53 50 20 3C ...    558      DC.B    'MDSP <ADDR1> <ADDR2> eg: MDSP $101A $1020',$0A,$0D,$0A,$0D
0000183F= 4D 54 53 54 3A 20 ...    559      DC.B    'MTST: TESTS A BLOCK OF MEMORY FOR READ/WRITE ERRORS',$0A,$0D
00001874= 4D 54 53 54 20 3C ...    560      DC.B    'MTST <ADDR1> <ADDR2> eg: MTST $900 $940',$0A,$0D,$0A,$0D
0000189F= 4D 43 48 47 3A 20 ...    561      DC.B    'MCHG: MODIFIES WORD OF DATA IN MEMORY.',$0A,$0D
000018C7= 4D 43 48 47 20 3C ...    562      DC.B    'MCHG <ADDR> eg: MCHG $900',$0A,$0D
000018E2= 24 39 30 30 3A 20 ...    563      DC.B    '$900: FFFF<cr>',$0A,$0D,$0A,$0D
000018F4= 53 52 3A 20 44 49 ...    564      DC.B    'SR: DISPLAYS THE CONTENTS OF THE STATUS REGISTER.',$0A,$0D,$0A,$0D
00001929= 53 57 41 50 3A 20 ...    565      DC.B    'SWAP: SWAPS VALUES IN MEMORY. SPECIFY BYTE, WORD, OR LONG WORD.',$0A,$0D
0000196A= 53 57 41 50 20 3C ...    566      DC.B    'SWAP <ADDR1> <ADDR2>;B/W/L eg: SWAP $900 $910;W',$0A,$0D,$0A,$0D
0000199D= 52 45 47 3A 20 44 ...    567      DC.B    'REG: DISPLAYS THE CURRENT REGISTER CONTENTS.',$0A,$0D,$0A,$0D
000019CD= 42 46 49 4C 4C 3A ...    568      DC.B    'BFILL: FILLS A BLOCK OF MEMORY WITH THE GIVEN WORD.',$0A,$0D
00001A02= 42 46 49 4C 4C 20 ...    569      DC.B    'BFILL <ADDR1> <ADDR2> <WORD> eg: BFILL $900 $9D0 FFFF',$0A,$0D,$0A,$0D
00001A3B= 42 4D 4F 56 3A 20 ...    570      DC.B    'BMOV: MOVES A BLOCK OF MEMORY TO ANOTHER LOCATION.',$0A,$0D
00001A6F= 42 4D 4F 56 20 3C ...    571      DC.B    'BMOV <ADDR1> <ADDR2> <ADDR3> eg: BMOV $900 $9D0 $910',$0A,$0D,$0A,$0D
00001AA7= 47 4F 3A 20 42 45 ...    572      DC.B    'GO: BEGINS PROGRAM EXECUTION AT THE SPECIFIED ADDRESS.',$0A,$0D
00001ADF= 47 4F 20 3C 41 44 ...    573      DC.B    'GO <ADDR> eg: GO $1000',$0A,$0D,$0A,$0D
00001AF9= 45 58 49 54 3A 20 ...    574      DC.B    'EXIT: EXITS THE MONITOR PROGRAM.',$0A,$0D,$0A,$0D
00001B1D= 41 4C 4C 20 41 44 ...    575      DC.B    'ALL ADDRESS ARGUMENTS MUST BE PREFACED WITH $',0
00001B4B                           576  
00004500                           577      ORG $4500
00004500                           578  TEST_PROG
00004500  43F9 00004510            579      LEA     TEST_MSG, A1
00004506  103C 000D                580      MOVE.B  #13, D0
0000450A  4E4F                     581      TRAP    #15
0000450C                           582      
0000450C  4EF8 1248                583      JMP     MAIN
00004510                           584  
00004510                           585  TEST_MSG
00004510= 48 45 4C 4C 4F 20 ...    586      DC.B    'HELLO WORLD!',0
0000451D                           587  
00008000                           588      ORG     $8000
00008000                           589      
00008000                           590  PRIV
00008000  027C DFFF                591      ANDI.W  #$DFFF,SR
00008004  007C 2000                592      ORI.W   #$2000,SR
00008008  4EF8 1248                593      JMP     MAIN
0000800C                           594  
0000800C                           595  DIV
0000800C  4280                     596      CLR.L   D0
0000800E  4281                     597      CLR.L   D1
00008010  82C0                     598      DIVU    D0,D1
00008012  4EF8 1248                599      JMP     MAIN
00008016                           600  
00008016                           601      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDR_ERR            1670
ADDR_ERR_MSG        16FB
ADD_ARG             1326
ADD_VAL             135C
ARG_ERR             130E
ARG_ERR_MSG         1043
BFILL               1590
BMOV                15D6
BUS_ERR             1660
BUS_ERR_MSG         16E0
CHG_LOOP            14B6
CLR_SPC             1264
COM_ADDR            10B4
COM_BUFF            2C10
COM_ERR             103E
COM_TABL            1000
DISP_ADDR           137E
DISP_MEM            140A
DIV                 800C
DIV0_ERR_MSG        173D
DIV_ZERO            1690
DONE_CHG            14E4
DONE_DISP           142C
DONE_FILL           15C8
DONE_MOVE           15FC
DONE_WRITE          1460
DSP_ADR_LP          1392
END_TBL             1038
ERR                 1300
EXIT                165A
FILL_MEM            15BE
FINAL_TEST          1474
FIND_COM            12A0
FIND_NEXT           12BC
GET_ARG             131C
GET_LENGTH          15AA
GET_VAL             1358
GO                  1498
GOT_ARG             1356
GOT_VAL             137C
HELP                13CA
HELP_DISP           17C1
ILL_INST            1680
ILL_INST_MSG        171B
INPUT               2C60
INPUT_COPY          1272
LESS                1522
LESS_ADDR           13A6
LESS_SR             1570
LINE_A              16C0
LINE_A_MSG          177D
LINE_F              16D0
LINE_F_MSG          178E
LOAD_COM            1290
MAIN                1248
MCHG                14AA
MDSP                13DA
MEM_ERR             1488
MEM_ERR_MSG         179F
MOVE_MEM            15F2
MTST                143A
NEW_LINE            13F8
NEXT_COM            12B8
NUM                 1338
NUM_VAL             1368
NXT_DIG             150E
NXT_REG             14F2
NXT_SR              155C
OUT_BUFF            2BC0
PARSE_INPUT         125C
PRIV                8000
PRIV_VIOL           16A0
PRIV_VIOL_MSG       1759
PROMPT              10A7
READ_TEST           1462
REG                 14E8
REG_MSG             1077
SR                  1540
SR_MSG              158C
STACK               3000
START               1200
SWAP                160A
SWAPB               163C
SWAPL               1650
SWAPW               1646
TEST_MSG            4510
TEST_PROG           4500
TRACE               16B0
TRACE_MSG           176D
WRITE_TEST          1454
